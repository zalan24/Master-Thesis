include {
    aglobal;
    fullscreen;
}

descriptor {
    variants {
    }
    resources {
        vec3 eyeDir;
        vec3 sunDir;
        vec3 sunLight;
        vec3 ambientLight;
    }
}

stages {
    ps {
        entry = main;
        use eyeDir;
        use sunDir;
        use sunLight;
        use ambientLight;
    }
}

ps {
    void main() {
        float sunSizeCos = 0.01;
        float minCos = -0.3;

        vec3 view = getViewVec();
        float cosFromSun = dot(-view, PushConstants.sunDir);

        vec3 light = PushConstants.ambientLight * 2;

        if (cosFromSun > 1-sunSizeCos) {
            // looking at the sun
            light += PushConstants.sunLight;
        } else if (cosFromSun >= minCos) {
            float f = (cosFromSun - minCos) / (1-sunSizeCos - minCos);
            f = exp(f) - 1.0;
            light += PushConstants.sunLight * f * 0.1;
        }

        // light += ;
        outColor = lightToColor(light);
    }
}
